//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abc.Nes.ArchivalPackage.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Default {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Default() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Abc.Nes.ArchivalPackage.Properties.Default", typeof(Default).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documents.
        /// </summary>
        internal static string Documents {
            get {
                return ResourceManager.GetString("Documents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to eADM Package.
        /// </summary>
        internal static string eADM {
            get {
                return ResourceManager.GetString("eADM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata.
        /// </summary>
        internal static string Metadata {
            get {
                return ResourceManager.GetString("Metadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata of file: {0} are not a valid!.
        /// </summary>
        internal static string MetadataAreNotValid {
            get {
                return ResourceManager.GetString("MetadataAreNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata found for file {0}, but filenames differ in amount of whitespace!.
        /// </summary>
        internal static string MetadataFoundWithoutSpaces {
            get {
                return ResourceManager.GetString("MetadataFoundWithoutSpaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata not found for file: {0}!.
        /// </summary>
        internal static string MetadataNotFound {
            get {
                return ResourceManager.GetString("MetadataNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of metadata files is insufficient!.
        /// </summary>
        internal static string NumberOfMetadataIsInsufficient {
            get {
                return ResourceManager.GetString("NumberOfMetadataIsInsufficient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package.
        /// </summary>
        internal static string Package {
            get {
                return ResourceManager.GetString("Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documents folder.
        /// </summary>
        internal static string Package_Documents {
            get {
                return ResourceManager.GetString("Package_Documents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata folder.
        /// </summary>
        internal static string Package_Metadata {
            get {
                return ResourceManager.GetString("Package_Metadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Objects folder.
        /// </summary>
        internal static string Package_Objects {
            get {
                return ResourceManager.GetString("Package_Objects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package has no documents!.
        /// </summary>
        internal static string PackageHasNoDocuments {
            get {
                return ResourceManager.GetString("PackageHasNoDocuments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package has no documents folder!.
        /// </summary>
        internal static string PackageHasNoDocumentsFolder {
            get {
                return ResourceManager.GetString("PackageHasNoDocumentsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package has no metadata!.
        /// </summary>
        internal static string PackageHasNoMetadata {
            get {
                return ResourceManager.GetString("PackageHasNoMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package has no metadata folder!.
        /// </summary>
        internal static string PackageHasNoMetadataFolder {
            get {
                return ResourceManager.GetString("PackageHasNoMetadataFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package has no objects!.
        /// </summary>
        internal static string PackageHasNoObjects {
            get {
                return ResourceManager.GetString("PackageHasNoObjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package has no object folder!.
        /// </summary>
        internal static string PackageHasNoObjectsFolder {
            get {
                return ResourceManager.GetString("PackageHasNoObjectsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package is not initialized!.
        /// </summary>
        internal static string PackageIsNotInitialized {
            get {
                return ResourceManager.GetString("PackageIsNotInitialized", resourceCulture);
            }
        }
    }
}
